#importing headers

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

#loading the dat
df=pd.read_csv("C:/Users/JAY CHOWDARY/Desktop/oasis internship/iris.csv")

df.shape

df.head(6)

df.isnull().sum()

#importing preprocessing
import seaborn as sns

sns.boxplot(df['SepalLengthCm'])

sns.boxplot(df['SepalWidthCm'])

q1=df['SepalWidthCm'].quantile(0.20)
q3=df['SepalWidthCm'].quantile(0.70)
iqr=q3-q1
upper_limit=iqr*1.5+q3
lower_limit=q1-1.5*iqr

def Imputation(value):
    if value > upper_limit:
        return upper_limit
    elif value < lower_limit:
        return lower_limit
    else:
        return value

df['SepalWidthCm']=df['SepalWidthCm'].apply(Imputation)

sns.boxplot(df['SepalWidthCm'])

sns.boxplot(df['PetalWidthCm'])

sns.boxplot(df['PetalLengthCm'])

df['PetalWidthCm'].unique()

df['PetalLengthCm'].unique()

df['SepalLengthCm'].unique()

df['SepalWidthCm'].unique()

df.shape

# import model
from sklearn.tree import DecisionTreeClassifier

tree=DecisionTreeClassifier()

from sklearn.model_selection import train_test_split

x=df.iloc[:,0:4]

x.head(5)

y=df['Species']

x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=42,test_size=0.2)

tree.fit(x_train,y_train)

#predicting the labels
y_pred=tree.predict(x_test)

from sklearn.metrics import accuracy_score

accuracy=(accuracy_score(y_test,y_pred)*100)

print(accuracy)

print(y_test,y_pred)

